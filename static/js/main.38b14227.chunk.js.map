{"version":3,"sources":["images/plus.svg","images/check.svg","images/copy.svg","images/edit.svg","images/remove.svg","services/AxiosInstance.js","services/api.js","images/index.js","components/TranslatedBox/index.js","constants.js","hooks/useCountry.js","hooks/useLanguages.js","components/TranslationBox/index.js","components/SelectBlock/index.js","pages/ChinaVersion.js","pages/GlobalVersion.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","timeout","headers","getTranslation","string","from","to","a","get","encodeURIComponent","res","original","translation","data","responseData","translatedText","window","alert","message","sleep","ms","Promise","resolve","setTimeout","getBaiduTranslation","array","newArray","i","length","salt","Math","floor","random","sign","md5","text","push","trans_result","dst","plus","require","default","check","copy","edit","remove","TranslatedBox","fromLanguage","toLanguage","originalText","React","useState","copied","setCopied","className","style","width","onCopy","src","alt","languages","label","value","baiduLanguages","useCountry","country","setCountry","useEffect","getUserGeolocationDetails","fetch","then","response","json","country_code","useLanguages","TranslationBox","index","item","onRemoveClick","onEditConfirmClick","isEditMode","setIsEditMode","fromLang","setFromLang","toLang","setToLang","setText","flexWrap","flex","margin","onChange","e","target","map","lang","idx","type","marginTop","onClick","find","SelectBlock","options","initIndex","setValue","selectedIndex","setSelectedIndex","option","left","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","ChinaVersion","props","translationArr","setTranslationArr","translatedArr","setTranslatedArr","setFromLanguage","setToLanguage","loading","setLoading","rightContainerRef","useRef","splice","info","placeholder","appRef","current","scrollTo","innerWidth","top","behavior","all","finally","ref","GlobalVersion","request","forEach","App","smoothscroll","polyfill","catch","err","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38b14227.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/plus.cac33e70.svg\";","export default __webpack_public_path__ + \"static/media/check.f94f5e2a.svg\";","export default __webpack_public_path__ + \"static/media/copy.e7bfc76b.svg\";","export default __webpack_public_path__ + \"static/media/edit.806b74bf.svg\";","export default __webpack_public_path__ + \"static/media/remove.562b6f7b.svg\";","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://api.mymemory.translated.net/',\n    timeout: 10000,\n    headers: { 'Content-Type': 'application/json' },\n});\n\nexport default instance;\n","import axios from './AxiosInstance';\nimport md5 from 'md5';\n\nconst getTranslation = async (string, from, to) => {\n    try {\n        const res = await axios.get(`get?q=${encodeURIComponent(string)}&langpair=${from}|${to}`);\n        return {\n            from: from,\n            to: to,\n            original: string,\n            translation: res.data.responseData.translatedText\n        };\n    } catch (error) {\n        window.alert(error.message);\n        return {\n            from: from,\n            to: to,\n            original: string,\n            translation: error.message\n        };\n    }\n};\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst getBaiduTranslation = async (array, string, from, to) => {\n    let newArray = [];\n    for (let i = 0; i < array.length; i++) {\n        const salt = Math.floor(Math.random() * 1000000);\n        const sign = md5(`20210813000915570${array[i].text}${salt}mbvfV5YloIuJu0Mh0WcD`);\n        const res = await axios.get(\n            `https://api.fanyi.baidu.com/api/trans/vip/translate?q=${array[i].text}&from=${array[i].from}&to=${array[i].to}&appid=20210813000915570&salt=${salt}&sign=${sign}`,\n            {\n                headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                }\n            }\n        );\n        newArray.push({\n            from: array[i].from,\n            to: array[i].to,\n            original: array[i].text,\n            translation: res.data.trans_result[0].dst\n        });\n        await sleep(1000);\n    };\n    return newArray;\n}\n\nexport {\n    getTranslation,\n    getBaiduTranslation,\n};","export const plus = require('./plus.svg').default;\nexport const check = require('./check.svg').default;\nexport const copy = require('./copy.svg').default;\nexport const edit = require('./edit.svg').default;\nexport const remove = require('./remove.svg').default;\n ","import React from 'react';\nimport './TranslatedBox.css';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { copy } from \"../../images\";\n\nconst TranslatedBox = ({\n    fromLanguage,\n    toLanguage,\n    originalText,\n    translatedText,\n}) => {\n    const [copied, setCopied] = React.useState(false);\n    return (\n        <div className=\"box\">\n            <div style={{ width: \"100%\" }}>\n                <p className=\"text\">{fromLanguage} &#8594; {toLanguage}</p>\n                <p className=\"text\">{originalText}</p>\n                <div className=\"translated-text-row\">\n                    <p className=\"text translated-text\">{translatedText}</p>\n                    <CopyToClipboard text={translatedText}\n                        onCopy={() => setCopied(true)}>\n                        <button className=\"copy-button\">\n                            <img src={copy} className=\"copy-icon\" alt=\"copy\" />\n                        </button>\n                    </CopyToClipboard>\n                </div>\n                {copied && (\n                    <span className=\"copied-text\">Copied !</span>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default TranslatedBox\n","export const languages = [\n    {\n        label: '繁',\n        value: 'zh-HK'\n      },\n      {\n        label: '简',\n        value: 'zh-CN'\n      },\n      {\n        label: 'Eng',\n        value: 'en-US'\n      }\n];\n\nexport const baiduLanguages = [\n      {\n        label: '简',\n        value: 'zh'\n      },\n      {\n        label: 'Eng',\n        value: 'en'\n      }\n]","import React, { useState, useEffect } from 'react'\n\nconst useCountry = () => {\n    const [country, setCountry] = useState('');\n\n    useEffect(() => {\n        getUserGeolocationDetails();\n    }, []);\n\n    const getUserGeolocationDetails = () => {\n        fetch(\n            \"https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572\"\n        )\n            .then(response => response.json())\n            .then(data => setCountry(data.country_code));\n    };\n\n    return country;\n}\n\nexport default useCountry;\n","import React from 'react';\nimport { languages, baiduLanguages } from '../constants';\nimport useCountry from './useCountry';\n\nconst useLanguages = () => {\n    const country = useCountry();\n\n    return (country === 'CN' ? baiduLanguages : languages);\n}\n\nexport default useLanguages;\n","import React from 'react';\nimport useLanguages from '../../hooks/useLanguages';\nimport './TranslationBox.css';\nimport { edit, remove, check } from \"../../images\";\n\nconst TranslationBox = ({\n    index,\n    item,\n    onRemoveClick,\n    onEditConfirmClick,\n}\n) => {\n    const [isEditMode, setIsEditMode] = React.useState(false);\n    const [fromLang, setFromLang] = React.useState(item.from);\n    const [toLang, setToLang] = React.useState(item.to);\n    const [text, setText] = React.useState(item.text);\n\n    const languages = useLanguages();\n\n    return (\n        <div className=\"box\" key={index} style={{ flexWrap: 'wrap' }}>\n            {\n                isEditMode ? (\n                    <>\n                        <div className=\"translation-box-row\">\n                            <p className=\"text\"\n                                style={{ width: '100%', flex: 'auto', margin: '1rem 0 0 0' }}\n                            >\n                                <select value={fromLang} onChange={(e) => setFromLang(e.target.value)}>\n                                    {languages.map((lang, idx) => (\n                                        <option key={idx} value={lang.value}>{lang.label}</option>\n                                    ))}\n                                </select> {' '}\n                                &#8594;\n                                {' '}<select value={toLang} onChange={(e) => setToLang(e.target.value)}>\n                                    {languages.map((lang, idx) => (\n                                        <option key={idx} value={lang.value}>{lang.label}</option>\n                                    ))}\n                                </select>\n                            </p>\n                        </div>\n                        <input type=\"text\" className=\"text-input\" style={{marginTop: '0.5rem'}} value={text} onChange={(e) => setText(e.target.value)} />\n                        <button\n                            className=\"tick-button\"\n                            onClick={() => {\n                                onEditConfirmClick(index, { from: fromLang, to: toLang, text: text });\n                                setIsEditMode(false)\n                            }}\n                        >\n                            <img src={check} className=\"tick-icon\" alt=\"tick-icon\" />\n                        </button>\n                    </>\n                ) : (\n                    <>\n                        <div className=\"translation-box-row\">\n                            <p className=\"text\"\n                                style={{ width: '100%', flex: 'auto', margin: '1rem 0 0 0' }}\n                            >\n                                {languages.find(lang => lang.value === item.from).label} &#8594; {languages.find(lang => lang.value === item.to).label}\n                            </p>\n                            <button className=\"edit-button\" onClick={() => setIsEditMode(true)}>\n                                <img src={edit} className=\"edit-icon\" alt=\"edit-icon\" />\n                            </button>\n                        </div>\n                        <p className=\"text\">{item.text}</p>\n                        <button className=\"remove-button\" onClick={() => onRemoveClick(index)}>\n                            <img src={remove} className=\"remove-icon\" alt=\"remove-icon\" />\n                        </button>\n                    </>\n                )\n            }\n\n        </div>\n    )\n}\n\nexport default TranslationBox;\n","import React from 'react';\nimport './SelectBlock.css';\n\nconst SelectBlock = ({\n    label,\n    options,\n    initIndex,\n    setValue,\n}) => {\n    const [selectedIndex, setSelectedIndex] = React.useState(initIndex);\n\n    return (\n        <div className=\"select-block-wrapper\">\n            {label && (\n                <span className=\"select-block-label\">{label}</span>\n            )}\n            <div className=\"select-block-options-wrapper\">\n                {options.map((option, idx) => (\n                    <div \n                        className=\"select-block-option\" \n                        key={idx}\n                        style={{\n                            width: `calc(100% / ${options.length})`\n                        }}\n                        onClick={() => {\n                            setSelectedIndex(idx);\n                            setValue(option.value);\n                        }}\n                    >\n                        <span \n                            className={idx === selectedIndex ? 'select-block-option-label option-active' : 'select-block-option-label'}\n                        >\n                            {option.label}\n                        </span>\n                    </div>\n                ))}\n                <div \n                    className=\"select-block-background-block\"\n                    style={{\n                        width: `calc(100% / ${options.length})`,\n                        left: `calc(100% / ${options.length} * ${selectedIndex})`,\n                        borderTopLeftRadius: selectedIndex === 0 ? '8px' : 0,\n                        borderBottomLeftRadius: selectedIndex === 0 ? '8px' : 0,\n                        borderTopRightRadius: selectedIndex === options.length - 1 ? '8px' : 0,\n                        borderBottomRightRadius: selectedIndex === options.length - 1 ? '8px' : 0,\n                    }}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default SelectBlock;\n","import '../App.css';\nimport React, { useState, useRef } from 'react';\nimport { getBaiduTranslation } from '../services/api';\nimport TranslatedBox from '../components/TranslatedBox';\nimport TranslationBox from '../components/TranslationBox';\nimport SelectBlock from '../components/SelectBlock';\nimport { baiduLanguages } from '../constants';\nimport { Promise } from \"bluebird\";\nimport { plus } from \"../images\";\n\nconst ChinaVersion = (props) => {\n    const [text, setText] = useState('');\n    const [translationArr, setTranslationArr] = useState([]);\n    const [translatedArr, setTranslatedArr] = useState([]);\n    const [fromLanguage, setFromLanguage] = useState('zh');\n    const [toLanguage, setToLanguage] = useState('en');\n    const [loading, setLoading] = useState(false);\n\n    const rightContainerRef = useRef(null);\n\n    const onAddClick = () => {\n        setTranslationArr([...translationArr, {\n            from: fromLanguage,\n            to: toLanguage,\n            text,\n        }]);\n        setText('');\n    };\n\n    const onRemoveClick = (index) => {\n        const array = [...translationArr];\n        array.splice(index, 1);\n        setTranslationArr(array);\n    };\n\n    const onTranslateClick = () => {\n        if (props.appRef.current) {\n            props.appRef.current.scrollTo({\n                left: window.innerWidth - 32,\n                top: 0,\n                behavior: 'smooth'\n              })\n        }\n        setLoading(true);\n\n        Promise.all(getBaiduTranslation(translationArr))\n            .then((res) => {\n                setTranslatedArr(res);\n                return res;\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const onResetClick = () => {\n        setTranslationArr([]);\n        setTranslatedArr([]);\n        setText('');\n    };\n\n    const onEditConfirmClick = (index, info) => {\n        const array = [...translationArr];\n        array[index] = info;\n        setTranslationArr(array);\n    }\n\n    const backToLeftContainer = () => {\n        if (props.appRef.current) {\n            props.appRef.current.scrollTo({\n                left: 0,\n                top: 0,\n                behavior: 'smooth'\n              })\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"left-container\">\n                <div className=\"input-section-wrapper\">\n                    <input\n                        type=\"text\"\n                        className=\"text-input\"\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        placeholder=\"Type here...\"\n                    />\n                    <button className=\"add-button\" onClick={onAddClick}>\n                        <img src={plus} className=\"add-icon\" alt=\"plus-icon\" />\n                    </button>\n                </div>\n                <div className=\"row\">\n                    <SelectBlock\n                        label=\"From:\"\n                        options={baiduLanguages}\n                        initIndex={0}\n                        setValue={setFromLanguage}\n                    />\n                </div>\n                <div className=\"row\">\n                    <SelectBlock\n                        label=\"To:\"\n                        options={baiduLanguages}\n                        initIndex={1}\n                        setValue={setToLanguage}\n                    />\n                </div>\n                <div className=\"row\">\n                    <button onClick={onTranslateClick} className=\"translate-button\">Translate</button>\n                    <button onClick={onResetClick} className=\"reset-button\">Reset</button>\n                </div>\n                <div className=\"boxes-wrapper\">\n                    {translationArr.map((item, idx) => (\n                        <TranslationBox\n                            index={idx}\n                            item={item}\n                            onRemoveClick={onRemoveClick}\n                            onEditConfirmClick={onEditConfirmClick}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"right-container\" ref={rightContainerRef}>\n            <p className=\"back-arrow-text\" onClick={backToLeftContainer}>\n                    <span>&#8592;</span>\n                </p>\n                <div className=\"boxes-wrapper\">\n                    {loading ? (<p>Loading...</p>) : (\n                        <>\n                            {translatedArr.map((item, idx) => (\n                                <TranslatedBox\n                                    key={idx}\n                                    fromLanguage={baiduLanguages.find(lang => lang.value === item.from).label}\n                                    toLanguage={baiduLanguages.find(lang => lang.value === item.to).label}\n                                    originalText={item.original}\n                                    translatedText={item.translation}\n                                />\n                            ))}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChinaVersion\n","import '../App.css';\nimport React, { useState, useRef } from 'react';\nimport { getTranslation } from '../services/api';\nimport TranslatedBox from '../components/TranslatedBox';\nimport TranslationBox from '../components/TranslationBox';\nimport SelectBlock from '../components/SelectBlock';\nimport { languages } from '../constants';\nimport { Promise } from \"bluebird\";\nimport { plus } from \"../images\";\n\nconst GlobalVersion = (props) => {\n    const [text, setText] = useState('');\n    const [translationArr, setTranslationArr] = useState([]);\n    const [translatedArr, setTranslatedArr] = useState([]);\n    const [fromLanguage, setFromLanguage] = useState('zh-HK');\n    const [toLanguage, setToLanguage] = useState('en-US');\n    const [loading, setLoading] = useState(false);\n\n    const rightContainerRef = useRef(null);\n\n    const onAddClick = () => {\n        setTranslationArr([...translationArr, {\n            from: fromLanguage,\n            to: toLanguage,\n            text,\n        }]);\n        setText('');\n    };\n\n    const onRemoveClick = (index) => {\n        const array = [...translationArr];\n        array.splice(index, 1);\n        setTranslationArr(array);\n    };\n\n    const onTranslateClick = () => {\n        if (props.appRef.current) {\n            props.appRef.current.scrollTo({\n                left: window.innerWidth - 32,\n                top: 0,\n                behavior: 'smooth'\n              })\n        }\n        setLoading(true);\n        let request = [];\n        translationArr.forEach(text => request.push(getTranslation(text.text, text.from, text.to)));\n\n        Promise.all(request)\n            .then((res) => {\n                setTranslatedArr(res);\n                return res;\n            })\n            .finally(() => setLoading(false));\n    };\n\n    const onResetClick = () => {\n        setTranslationArr([]);\n        setTranslatedArr([]);\n        setText('');\n    };\n\n    const onEditConfirmClick = (index, info) => {\n        const array = [...translationArr];\n        array[index] = info;\n        setTranslationArr(array);\n    }\n\n    const backToLeftContainer = () => {\n        if (props.appRef.current) {\n            props.appRef.current.scrollTo({\n                left: 0,\n                top: 0,\n                behavior: 'smooth'\n              })\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"left-container\">\n                <div className=\"input-section-wrapper\">\n                    <input\n                        type=\"text\"\n                        className=\"text-input\"\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                        placeholder=\"Type here...\"\n                    />\n                    <button className=\"add-button\" onClick={onAddClick}>\n                        <img src={plus} className=\"add-icon\" alt=\"plus-icon\" />\n                    </button>\n                </div>\n                <div className=\"row\">\n                    <SelectBlock\n                        label=\"From:\"\n                        options={languages}\n                        initIndex={0}\n                        setValue={setFromLanguage}\n                    />\n                </div>\n                <div className=\"row\">\n                    <SelectBlock\n                        label=\"To:\"\n                        options={languages}\n                        initIndex={2}\n                        setValue={setToLanguage}\n                    />\n                </div>\n                <div className=\"row\">\n                    <button onClick={onTranslateClick} className=\"translate-button\">Translate</button>\n                    <button onClick={onResetClick} className=\"reset-button\">Reset</button>\n                </div>\n                <div className=\"boxes-wrapper\">\n                    {translationArr.map((item, idx) => (\n                        <TranslationBox\n                            index={idx}\n                            item={item}\n                            onRemoveClick={onRemoveClick}\n                            onEditConfirmClick={onEditConfirmClick}\n                        />\n                    ))}\n                </div>\n            </div>\n\n            <div className=\"right-container\" ref={rightContainerRef}>\n                <p className=\"back-arrow-text\" onClick={backToLeftContainer}>\n                    <span>&#8592;</span>\n                </p>\n                <div className=\"boxes-wrapper\">\n                    {loading ? (<p>Loading...</p>) : (\n                        <>\n                            {translatedArr.map((item, idx) => (\n                                <TranslatedBox\n                                    key={idx}\n                                    fromLanguage={languages.find(lang => lang.value === item.from).label}\n                                    toLanguage={languages.find(lang => lang.value === item.to).label}\n                                    originalText={item.original}\n                                    translatedText={item.translation}\n                                />\n                            ))}\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default GlobalVersion\n","import './App.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport ChinaVersion from './pages/ChinaVersion';\nimport GlobalVersion from './pages/GlobalVersion';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nfunction App() {\n  smoothscroll.polyfill();\n  const [country, setCountry] = useState('');\n  const [loading, setLoading] = useState('');\n\n  useEffect(() => {\n    getUserGeolocationDetails();\n  }, []);\n\n  const getUserGeolocationDetails = () => {\n    setLoading(true);\n    fetch(\n      \"https://geolocation-db.com/json/0f761a30-fe14-11e9-b59f-e53803842572\"\n    )\n      .then(response => response.json())\n      .then(data => {\n        setCountry(data.country_code);\n        setLoading(false)\n      })\n      .catch(err => {\n        setLoading(false);\n        window.alert(err.message);\n      });\n  };\n\n  const appRef = useRef(null);\n\n  return (\n    <div className=\"App\" ref={appRef}>\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          {country === 'CN' ? (\n            <ChinaVersion appRef={appRef} />\n          ) : (\n            <GlobalVersion appRef={appRef} />\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}